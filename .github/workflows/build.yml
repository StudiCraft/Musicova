name: Build and Release Musicova

on:
  push:
    tags:
      - 'v*' # Only run when a tag starting with 'v' is pushed

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-executables:
    name: Build on ${{ matrix.os_display_name }}
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os_runner: windows-latest
            os_display_name: Windows
            executable_suffix: '.exe'
            release_asset_name_os_part: windows
            pyinstaller_output_name: musicova.exe
            package_type: zip
          - os_runner: ubuntu-latest
            os_display_name: Ubuntu Linux
            executable_suffix: ''
            release_asset_name_os_part: ubuntu
            pyinstaller_output_name: musicova
            package_type: zip
          - os_runner: macos-latest
            os_display_name: macOS
            executable_suffix: ''
            release_asset_name_os_part: macos
            pyinstaller_output_name: musicova.app
            package_type: dmg
    runs-on: ${{ matrix.os_runner }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install System Dependencies (Linux)
        if: matrix.os_runner == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential python3-dev \
            libxcb-cursor0 python3-pyqt5 python3-pyqt5.qtsvg libqt5x11extras5-dev \
            libxcb-xinerama0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 \
            libxcb-render-util0 libxcb-shape0 libxkbcommon-x11-0

      - name: Install System Dependencies (macOS)
        if: matrix.os_runner == 'macos-latest'
        run: |
          brew update
          brew install cmake create-dmg

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools pyinstaller PyQt5
          pip install --no-build-isolation -r requirements.txt
        working-directory: ./Python

      - name: Compile Python Script to Executable (Windows)
        if: matrix.os_runner == 'windows-latest'
        run: |
          $command = @'
          pyinstaller --onefile --windowed --name musicova musicova_python_app.py `
            --add-data "fonts/DynaPuff-Regular.ttf;fonts" `
            --add-data "Musicova logo v2.png;." `
            --hidden-import=PyQt5.sip `
            --hidden-import=PyQt5.QtCore `
            --hidden-import=PyQt5.QtGui `
            --hidden-import=PyQt5.QtWidgets `
            --hidden-import=PyQt5.QtSvg `
            --hidden-import=pkg_resources.py2_warn
          '@
          Invoke-Expression $command
        shell: pwsh
        working-directory: ./Python

      - name: Compile Python Script to Executable (Linux/macOS)
        if: matrix.os_runner != 'windows-latest'
        run: |
          pyinstaller --onefile --windowed --name musicova musicova_python_app.py \
            --add-data "fonts/DynaPuff-Regular.ttf:fonts" \
            --add-data "Musicova logo v2.png:." \
            --hidden-import=PyQt5.sip \
            --hidden-import=PyQt5.QtCore \
            --hidden-import=PyQt5.QtGui \
            --hidden-import=PyQt5.QtWidgets \
            --hidden-import=PyQt5.QtSvg \
            --hidden-import=pkg_resources.py2_warn
        working-directory: ./Python

      # Add packaging and release steps as needed...
      
